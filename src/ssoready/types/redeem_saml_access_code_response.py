# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1


class RedeemSamlAccessCodeResponse(pydantic_v1.BaseModel):
    """
    Details about a user that just completed a SAML login.
    """

    email: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The user's email.
    """

    state: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    Arbitrary data included in the corresponding GetSAMLRedirectURL request.
    """

    attributes: typing.Optional[typing.Dict[str, str]] = pydantic_v1.Field(default=None)
    """
    Key-value attributes included by the identity provider.
    """

    organization_id: typing.Optional[str] = pydantic_v1.Field(alias="organizationId", default=None)
    """
    The organization this user belongs to.
    """

    organization_external_id: typing.Optional[str] = pydantic_v1.Field(alias="organizationExternalId", default=None)
    """
    The external ID of the organization this user belongs to.
    """

    saml_flow_id: typing.Optional[str] = pydantic_v1.Field(alias="samlFlowId", default=None)
    """
    The SAML flow tracking this SAML login.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
